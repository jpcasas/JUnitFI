package com.adecco.emea.projects;

import javax.net.ssl.TrustManager;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSession;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;

public class HTTPClient {

	public static void main(String[] args) throws Exception {
		String message=HTTPClient.getReponse("http://localhost:8080/MO/CNTMGT/PUTCOMMERCIALCONTRACT/v01");
		System.out.println(message);
	}
    public static String getReponse(String surl) throws Exception {
        // Create a trust manager that does not validate certificate chains
        TrustManager[] trustAllCerts = new TrustManager[] { new X509TrustManager() {
            public java.security.cert.X509Certificate[] getAcceptedIssuers() {
                return null;
            }
            public void checkClientTrusted(X509Certificate[] certs, String authType) {
            }
            public void checkServerTrusted(X509Certificate[] certs, String authType) {
            }
        } };
        // Install the all-trusting trust manager
        final SSLContext sc = SSLContext.getInstance("SSL");
        
        sc.init(null, trustAllCerts, new java.security.SecureRandom());
        
        
        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
        // Create all-trusting host name verifier
        HostnameVerifier allHostsValid = new HostnameVerifier() {
           

			public boolean verify(String arg0, SSLSession arg1) {
				
				return true;
			}
        };

        // Install the all-trusting host verifier
        HttpsURLConnection.setDefaultHostnameVerifier(allHostsValid);

        URL url = new URL(surl);
        HttpURLConnection  con = (HttpURLConnection)url.openConnection();
        con.connect();
        
        return con.getResponseCode()+"";
    }
    
} 